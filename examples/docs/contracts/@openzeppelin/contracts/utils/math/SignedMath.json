{
  "methods": {},
  "events": {},
  "errors": {},
  "internalMethods": {
    "max(int256,int256)": {
      "code": "function max(int256 a, int256 b) internal pure returns (int256)",
      "inputs": {},
      "outputs": {},
      "details": "Returns the largest of two signed numbers."
    },
    "min(int256,int256)": {
      "code": "function min(int256 a, int256 b) internal pure returns (int256)",
      "inputs": {},
      "outputs": {},
      "details": "Returns the smallest of two signed numbers."
    },
    "average(int256,int256)": {
      "code": "function average(int256 a, int256 b) internal pure returns (int256)",
      "inputs": {},
      "outputs": {},
      "details": "Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
    },
    "abs(int256)": {
      "code": "function abs(int256 n) internal pure returns (uint256)",
      "inputs": {},
      "outputs": {},
      "details": "Returns the absolute unsigned value of a signed value."
    }
  },
  "path": "@openzeppelin/contracts/utils/math",
  "details": "Standard signed math utilities missing in the Solidity language.",
  "name": "SignedMath"
}
