{
  "methods": {
    "isValidSignature(bytes32,bytes)": {
      "stateMutability": "view",
      "code": "function isValidSignature(bytes32 hash, bytes signature) external view returns (bytes4 magicValue)",
      "inputs": {
        "hash": {
          "type": "bytes32",
          "description": "Hash of the data to be signed"
        },
        "signature": {
          "type": "bytes",
          "description": "Signature byte array associated with _data"
        }
      },
      "outputs": {
        "magicValue": {
          "type": "bytes4"
        }
      },
      "details": "Should return whether the signature provided is valid for the provided data"
    }
  },
  "events": {},
  "errors": {},
  "internalMethods": {},
  "path": "@openzeppelin/contracts/interfaces",
  "details": "Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._",
  "name": "IERC1271"
}
